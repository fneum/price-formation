from shutil import move, unpack_archive

from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider

HTTP = HTTPRemoteProvider()

configfile: "config/config.yaml"


rule download_weather_data:
    input:
        HTTP.remote("https://researchdata.reading.ac.uk/321/4/ERA5_data_1950-2020.zip", keep_local=True, static=True)
    output:
        protected(directory("resources/reading"))
    run:
        unpack_archive(input[0], output[0])


rule download_technology_data:
    input:
        HTTP.remote(
            "raw.githubusercontent.com/PyPSA/technology-data/{}/outputs/costs_{}.csv".format(
                config["technology_data"]["version"],
                config["technology_data"]["year"],
            ),
            keep_local=True,
            static=True,
        ),
    params:
        version=config["technology_data"]["version"],
        year=config["technology_data"]["year"]
    output:
        "results/technology_data.csv",
    run:
        move(input[0], output[0])


rule solve:
    input:
        onwind_cf="resources/reading/ERA5_data_1950-2020/wp_onshore/NUTS_0_wp_ons_sim_0_historical_loc_weighted.nc",
        solar_cf="resources/reading/ERA5_data_1950-2020/solar_power_capacity_factor/NUTS_0_sp_historical.nc",
        tech_data="results/technology_data.csv",
    output:
        network="results/network.nc",
        energy_balance="results/summary/energy_balance.csv",
        statistics="results/summary/statistics.csv",
    script:
        "scripts/solve.py"


rule plot:
    input:
        matplotlibrc="matplotlibrc",
        **rules.solve.output
    output:
        price_duration="results/graphics/price_duration.pdf",
        mu_energy_balance="results/graphics/mu_energy_balance.pdf",
    script:
        "scripts/plot.py"
